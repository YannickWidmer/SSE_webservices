# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-27 09:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('polls', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('value', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('gcm_token', models.CharField(blank=True, max_length=255, null=True)),
                ('last_connected', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'device',
            },
        ),
        migrations.CreateModel(
            name='Foe',
            fields=[
                ('foe_archetyp_id', models.IntegerField()),
                ('foe_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('stamina_reserve_max', models.IntegerField(blank=True, null=True)),
                ('stamina_reserve_now', models.IntegerField(blank=True, null=True)),
                ('stamina_available_now', models.IntegerField(blank=True, null=True)),
                ('stamina_available_used', models.IntegerField(blank=True, null=True)),
                ('stamina_available_max', models.IntegerField(blank=True, null=True)),
                ('stamina_available_recover', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'foe',
            },
        ),
        migrations.CreateModel(
            name='Migrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('migration', models.CharField(max_length=255)),
                ('batch', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'migrations',
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'relation',
            },
        ),
        migrations.CreateModel(
            name='Relationable',
            fields=[
                ('relationable_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'relationable',
            },
        ),
        migrations.CreateModel(
            name='ScenarioOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'scenario_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Talent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('value', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'talent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsableState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mana_needed', models.IntegerField()),
                ('mana_max', models.IntegerField()),
                ('mana_used', models.IntegerField()),
                ('difficulty', models.IntegerField()),
                ('level', models.IntegerField()),
            ],
            options={
                'db_table': 'usable_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('phpsess_id', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'user_info',
            },
        ),
        migrations.CreateModel(
            name='UserWorldRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'user_world_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='World',
            fields=[
                ('world_id', models.AutoField(primary_key=True, serialize=False)),
                ('world_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'world',
            },
        ),
        migrations.CreateModel(
            name='FoeArchetyp',
            fields=[
                ('foe_archetyp', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Relationable')),
                ('actions', models.TextField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('max_health', models.IntegerField(blank=True, null=True)),
                ('max_stamina', models.IntegerField(blank=True, null=True)),
                ('max_stamina_available', models.IntegerField(blank=True, null=True)),
                ('stamina_recover', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'foe_archetyp',
            },
        ),
        migrations.CreateModel(
            name='FoeGroup',
            fields=[
                ('foe_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Relationable')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'foe_group',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Relationable')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('weight_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('value_unit', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'item',
            },
        ),
        migrations.CreateModel(
            name='ItemGroup',
            fields=[
                ('item_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Relationable')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'item_group',
            },
        ),
        migrations.CreateModel(
            name='Npc',
            fields=[
                ('npc', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Relationable')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'npc',
            },
        ),
        migrations.CreateModel(
            name='NpcGroup',
            fields=[
                ('npc_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Relationable')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'npc_group',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('place_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Relationable')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('short_name', models.CharField(blank=True, max_length=32, null=True)),
                ('icon_url', models.CharField(blank=True, max_length=255, null=True)),
                ('placement_in_parent', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'place',
            },
        ),
        migrations.CreateModel(
            name='PlayerCharacter',
            fields=[
                ('player_character', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Relationable')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('race', models.CharField(blank=True, max_length=255, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=255, null=True)),
                ('background', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'player_character',
            },
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('scenario_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Relationable')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'scenario',
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('story_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Relationable')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'story',
            },
        ),
        migrations.CreateModel(
            name='Clothe',
            fields=[
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Item')),
                ('wheater_protection', models.IntegerField()),
                ('protection', models.IntegerField()),
                ('bodypart', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'clothe',
            },
        ),
        migrations.CreateModel(
            name='ItemContainer',
            fields=[
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Item')),
                ('config', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'item_container',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('player_character', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.PlayerCharacter')),
                ('life_max', models.IntegerField(blank=True, null=True)),
                ('life_now', models.IntegerField(blank=True, null=True)),
                ('stamina_reserve_max', models.IntegerField(blank=True, null=True)),
                ('stamina_reserve_now', models.IntegerField(blank=True, null=True)),
                ('stamina_available_max', models.IntegerField(blank=True, null=True)),
                ('stamina_available_now', models.IntegerField(blank=True, null=True)),
                ('stamina_available_used', models.IntegerField(blank=True, null=True)),
                ('mentalstate_x', models.IntegerField(blank=True, null=True)),
                ('mentalstate_y', models.IntegerField(blank=True, null=True)),
                ('mentalstate', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'state',
            },
        ),
        migrations.CreateModel(
            name='Usable',
            fields=[
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Item')),
                ('actions', models.TextField()),
                ('usable_type', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'usable',
            },
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('usable', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='polls.Usable')),
                ('mana_needed', models.IntegerField()),
                ('mana_max', models.IntegerField()),
                ('mana_used', models.IntegerField()),
                ('difficulty', models.IntegerField()),
                ('level', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'spell',
            },
        ),
    ]
